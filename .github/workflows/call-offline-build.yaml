name: Offline Build

on:
  workflow_call:

jobs:
  offline-build:
    runs-on: ubuntu-latest
    steps:
    - name: Git clone kubean repo
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set kubespray version env
      run: |
        echo "SPRAY_VERSION=$(yq ".kubespray_version" version.yml)" >> ${GITHUB_ENV}
        echo "KUBE_VERSION=$(yq ".kubernetes_version" version.yml)" >> ${GITHUB_ENV}
        echo "SHA256SUM_TXT=sha256sum-offline-${{ github.ref_name }}.txt" >> ${GITHUB_ENV}

    - name: Git clone kubespray repo
      uses: actions/checkout@v5
      with:
        repository: kubernetes-sigs/kubespray
        ref: ${{ env.SPRAY_VERSION }}
        path: ./kubespray

    - name: Install yq tool
      uses: mikefarah/yq@v4.48.1

    - name: Generate Manifest & LocalArtifactSet manifests
      env:
        KUBEAN_TAG: ${{ github.ref_name }}
        SPRAY_COMMIT: ${{ env.SPRAY_VERSION }}
        KUBE_VERSION: ${{ env.KUBE_VERSION }}
      run: |
        ./artifacts/gen_airgap_crs.py Manifest
        ./artifacts/gen_airgap_crs.py LocalArtifactSet
        cp artifacts/import_iso.sh ${KUBEAN_TAG}/
        cp build/os-packages/others/other_os_pkgs.sh ${KUBEAN_TAG}/

        pushd ${KUBEAN_TAG}
        sha256sum localartifactset.cr.yaml >> ../${{ env.SHA256SUM_TXT }}
        sha256sum import_iso.sh >> ../${{ env.SHA256SUM_TXT }}
        sha256sum other_os_pkgs.sh >> ../${{ env.SHA256SUM_TXT }}
        popd

        echo "localartifactset cr output:"
        cat ${KUBEAN_TAG}/localartifactset.cr.yaml
        echo "manifest cr output:"
        cat charts/kubean/templates/manifest.cr.yaml

    - name: Preparing the python environment
      uses: actions/setup-python@v6
      with:
        python-version: 3.11

    - name: Install kubespray requirements
      run: |
        cd kubespray/
        python3 -m pip install --no-cache-dir -r requirements.txt
        cd ../

    - name: Generate binaries & images offline packages (amd64/arm64)
      env:
        KUBEAN_TAG: ${{ github.ref_name }}
        KUBE_VERSION: ${{ env.KUBE_VERSION }}
      run: |
        function gen_airgap_pkgs() {
          export ARCH=$1
          export OFFLINE_PACKAGE_DIR=${KUBEAN_TAG}/${ARCH}
          bash artifacts/gen_airgap_pkgs.sh all

          pushd ${OFFLINE_PACKAGE_DIR}

          tar -zcvf files-${ARCH}-${KUBEAN_TAG}.tar.gz files/
          tar -zcvf images-${ARCH}-${KUBEAN_TAG}.tar.gz images/
          mv files.list files-${ARCH}.list
          mv images.list images-${ARCH}.list

          sha256sum files-${ARCH}-${KUBEAN_TAG}.tar.gz >> ../../${{ env.SHA256SUM_TXT }}
          sha256sum images-${ARCH}-${KUBEAN_TAG}.tar.gz >> ../../${{ env.SHA256SUM_TXT }}
          sha256sum files-${ARCH}.list >> ../../${{ env.SHA256SUM_TXT }}
          sha256sum images-${ARCH}.list >> ../../${{ env.SHA256SUM_TXT }}

          popd
        }

        for arch in 'amd64' 'arm64'; do
          gen_airgap_pkgs "${arch}"
        done

        tree ${KUBEAN_TAG}/
        echo -e "\noutput files size:\n"
        ls -lh ${KUBEAN_TAG}/amd64/
        ls -lh ${KUBEAN_TAG}/arm64/

    - name: Upload offline sha256sum file
      uses: actions/upload-artifact@v5
      with:
        name: offline-sha256sum-key
        retention-days: 1
        path: |
          ${{ env.SHA256SUM_TXT }}

    - name: Release and upload packages
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          ${{ github.ref_name }}/*/*.tar.gz
          ${{ github.ref_name }}/*/*.list
          ${{ github.ref_name }}/*.cr.yaml
          ${{ github.ref_name }}/*.sh

    - name: Upload InfoManifest CR
      uses: actions/upload-artifact@v5
      with:
        path: charts/kubean/templates/manifest.cr.yaml
        name: info-manifest-cr-file
        retention-days: 1
