name: Auto Release CI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'

env:
  ENVIRONMENT_RUNS_ON: "ubuntu-latest"
  ENVIRONMENT_CD: "alpha"

jobs:
  get-spray-ref:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.get_ref.outputs.sha }}
    steps:
      - name: Get kubespray latest commit sha
        id: get_ref
        run: |
          COMMIT_SHA=`git ls-remote https://github.com/kubernetes-sigs/kubespray.git HEAD | awk '{ print $1}'`
          echo sha=${COMMIT_SHA}  >> $GITHUB_OUTPUT

  call-offline-build:
    uses: ./.github/workflows/call-offline-build.yaml
    needs: get-spray-ref
    with:
      SPRAY_REF: ${{ needs.get-spray-ref.outputs.sha }}

  call-images-build:
    uses: ./.github/workflows/call-images-build.yaml
    secrets: inherit
    needs: get-spray-ref
    with:
      SPRAY_REF: ${{ needs.get-spray-ref.outputs.sha }}
      CI_TYPE: "release"

  call-os-pkgs-build:
    uses: ./.github/workflows/call-os-pkgs-build.yaml
    secrets: inherit

  sync-charts-and-api:
    needs: [call-images-build,call-offline-build]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download InfoManifest CR
        uses: actions/download-artifact@v3
        with:
          path: charts/kubean/templates/
          name: info-manifest-cr-file

      - name: update helm version and image tag
        run: |
          yq -i ".version=\"${GITHUB_REF_NAME}\"" charts/kubean/Chart.yaml
          yq -i ".appVersion=\"${GITHUB_REF_NAME}\"" charts/kubean/Chart.yaml
          yq -i ".kubeanOperator.image.tag=\"${GITHUB_REF_NAME}\"" charts/kubean/values.yaml
          yq -i ".sprayJob.image.tag=\"${GITHUB_REF_NAME}\"" charts/kubean/values.yaml

      - name: helm checkout
        run: |
          pushd charts
          tar zcvf kubean.tar.gz kubean
          bash ../hack/verify_helm_standard.sh kubean.tar.gz
          rm -rf kubean.tar.gz
          popd

      - name: Pushes charts to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@v1.5.1
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: charts
          destination-github-username: ${{ github.repository_owner }}
          destination-repository-name: 'kubean-helm-chart'
          user-email: kubean-robot@ykubean.io
          commit-message: See ORIGIN_COMMIT from $GITHUB_REF
          target-directory: charts
          target-branch: main

      - name: Pushes api to kubean-api repository
        env:
          REPO_OWNER: ${{ github.repository_owner }}
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        run: |
          ./hack/sync_api.sh ${GITHUB_REF_NAME}

  save-release-notes-to-file:
    needs: sync-charts-and-api
    uses: ./.github/workflows/call-save-release-notes.yaml
    secrets: inherit

  get-environment:
    runs-on: ubuntu-latest
    needs: save-release-notes-to-file
    outputs:
      environment_runs_on: ${{ steps.get_variables.outputs.environment_runs_on }}
      enviroment_cd: ${{ steps.get_variables.outputs.enviroment_cd }}

    steps:
      - name: Get environment variable
        id: get_variables
        run: |
          echo environment_runs_on=${{ env.ENVIRONMENT_RUNS_ON }} >> $GITHUB_OUTPUT
          echo enviroment_cd=${{ env.ENVIRONMENT_CD }} >> $GITHUB_OUTPUT

  call-cd:
    uses: ./.github/workflows/call-cd.yaml
    secrets: inherit
    needs: get-environment
    with:
      ENVIRONMENT_RUNS_ON: ${{ needs.get-environment.outputs.environment_runs_on }}
      ENRIRONMENT_CD: ${{ needs.get-environment.outputs.enviroment_cd }}
      CI_TYPE: "release"

  download_files:
    runs-on: [ self-hosted, offline ]
    needs: get-environment
    continue-on-error: true
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: download_files
        env:
          VSPHERE_USER: ${{ secrets.VSPHERE_USER }}
          VSPHERE_PASSWD: ${{ secrets.VSPHERE_PASSWD }}

        run: |
          CONTAINER_TAG=$(git describe --tags --abbrev=8 --dirty)
          HELM_CHART_VERSION=`echo ${CONTAINER_TAG}|awk -F "-" '{print $1}'`
          TAG_SECOND_PART=`echo ${CONTAINER_TAG}|awk  -F "-" '{print $2 }'`
          if [[ ${TAG_SECOND_PART} =~ rc[0-9]+ ]];then 
            HELM_CHART_VERSION=`echo ${CONTAINER_TAG}|awk -F "-" '{print $1"-"$2 }'`
          fi
          echo ${{ runner.name }}
          echo "${CONTAINER_TAG}"
          echo "${HELM_CHART_VERSION}"
          bash hack/download-offline-files.sh  "${HELM_CHART_VERSION}"

  # call-upload-qiniu:
  #   needs: [call-os-pkgs-build,call-offline-build]
  #   uses: ./.github/workflows/call-upload-qiniu.yaml
  #   secrets: inherit
