name: OS Packages Build

on: workflow_call

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          echo "matrix=$(jq -c . < .github/workflows/os-pkgs-matrix.json)" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set env
      run: |
        ORGANIZATION_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F "/" '{print $1}' | tr '[:upper:]' '[:lower:]')
        echo "ORG_NAME=${ORGANIZATION_NAME,,}" >> ${GITHUB_ENV}

    - name: Check if the OS package needs to be rebuilt
      id: check
      env:
        OS_NAME: ${{ matrix.name }}
        ORG_NAME: ${{ env.ORG_NAME }}
      run: |
        ret=`bash build/os-packages/check_rebuild_pkgs.sh`
        echo "need_rebuild=${ret}" >>$GITHUB_OUTPUT

    - name: Set up QEMU
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      uses: docker/setup-buildx-action@v3.3.0

    - name: Build OS packages to local
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      uses: docker/build-push-action@v6.0.1
      with:
        context: .
        file: ${{ matrix.dockerfile }}
        platforms: linux/amd64,linux/arm64
        outputs: type=local,dest=./

    - name: Make OS packages into Tar files
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install pigz
        mkdir -p os-pkgs/
        mv linux_amd64/resources resources
        tar -I pigz -cf os-pkgs/os-pkgs-amd64.tar.gz resources --remove-files
        mv linux_arm64/resources resources
        tar -I pigz -cf os-pkgs/os-pkgs-arm64.tar.gz resources --remove-files
        sha256sum os-pkgs/os-pkgs-{amd64,arm64}.tar.gz > os-pkgs/os-pkgs.sha256sum.txt
        cp artifacts/import_ospkgs.sh os-pkgs/
        tar -I pigz -cf os-pkgs-${{ matrix.name }}-${{ github.ref_name }}.tar.gz os-pkgs/ --remove-files

    - name: Generate sha256sum file
      run: |
        sha256sum os-pkgs-${{ matrix.name }}-${{ github.ref_name }}.tar.gz > sha256sum-os-pkg-${{ matrix.name }}-${{ github.ref_name }}.txt

    - name: Upload os-pkgs sha256sum file
      uses: actions/upload-artifact@v4
      with:
        name: os-pkgs-sha256sum-${{ matrix.name }}-key
        retention-days: 1
        path: |
            sha256sum-os-pkg-${{ matrix.name }}-${{ github.ref_name }}.txt

    - name: Release and upload packages
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          os-pkgs-${{ matrix.name }}-${{ github.ref_name }}.tar.gz
