name: image build kubespray

on:
  workflow_call:
    inputs:
      SPRAY_REF:
        required: true
        type: string
      REPO:
        required: true
        type: string
      BUILD_PLATFORM:
        required: true
        type: string
      ONLINE_REGISTER:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      SPRAY_REF:
        required: true
        type: string
      REPO:
        required: true
        type: string
        default: "kubean-io"
      BUILD_PLATFORM:
        required: true
        type: string
        default: "linux/amd64,linux/arm64"
      ONLINE_REGISTER:
        required: true
        type: string
        default: "ghcr.io"
jobs:
  output-variable:
    runs-on: ubuntu-latest
    outputs:
      image_tag_short_sha: ${{ steps.output_variables.outputs.image_tag_short_sha }}

    steps:
    - name: output environment variable
      id: output_variables
      run: |
        INPUTS_SPRAY_REF=${{ inputs.SPRAY_REF }}
        SPRAY_SHA=`git ls-remote https://github.com/kubernetes-sigs/kubespray.git ${INPUTS_SPRAY_REF} | awk '{ print $1}'`
        if [[ -z "${SPRAY_SHA}" ]];then
            if (( ${#INPUTS_SPRAY_REF} != 40 ));then
              echo "The sha length of the commit must be 40"
              exit 1
            fi
            SPRAY_SHA=${INPUTS_SPRAY_REF}
        fi

        IMAGE_TAG_SHORT_SHA=$(echo ${SPRAY_SHA} | cut -c 1-7)
        echo image_tag_short_sha=${IMAGE_TAG_SHORT_SHA} >> $GITHUB_OUTPUT
  build-kubespray-image:
    needs: output-variable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.6.0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: kubespray base image build
      uses: docker/build-push-action@v4.0.0
      with:
        context: ./build/images/kubespray
        build-args: |
          SPRAY_REF=${{ inputs.SPRAY_REF }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push: true
        provenance: false
        platforms: ${{ inputs.BUILD_PLATFORM }}
        tags: |
          ${{ inputs.ONLINE_REGISTER }}/${{ inputs.REPO }}/kubespray:${{ needs.output-variable.outputs.image_tag_short_sha }}
          ${{ inputs.ONLINE_REGISTER }}/${{ inputs.REPO }}/kubespray:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
