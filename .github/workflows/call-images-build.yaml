name: Image Build

on:
  workflow_call:
    inputs:
      SPRAY_REF:
        required: true
        type: string
      CI_TYPE:
        required: true
        type: string

env:
  ONLINE_REGISTER: ghcr.io
  BUILD_PLATFORM: linux/amd64,linux/arm64

jobs:
  output-variable:
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.output_variables.outputs.repo }}
      online_register: ${{ steps.output_variables.outputs.online_register }}
      build_plateform: ${{ steps.output_variables.outputs.build_plateform }}
      image_tag_short_sha: ${{ steps.output_variables.outputs.image_tag_short_sha }}
      container_tag: ${{ steps.output_variables.outputs.container_tag }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: output environment variable
      id: output_variables
      run: |
        IMAGE_TAG_SHORT_SHA=$(echo ${{ inputs.SPRAY_REF }} | cut -c 1-7)
        echo image_tag_short_sha=${IMAGE_TAG_SHORT_SHA} >> $GITHUB_OUTPUT
        ORGANIZATION_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F "/" '{print $1}' | tr '[:upper:]' '[:lower:]')
        echo repo=${ORGANIZATION_NAME} >> $GITHUB_OUTPUT
        echo online_register=${{ env.ONLINE_REGISTER }} >> $GITHUB_OUTPUT
        echo build_plateform=${{ env.BUILD_PLATFORM }} >> $GITHUB_OUTPUT
        CONTAINER_TAG=$(git describe --tags --abbrev=8 --dirty)
        if [[ ${{ inputs.CI_TYPE }} == "main" ]]; then
          echo container_tag="${CONTAINER_TAG}-main" >> $GITHUB_OUTPUT
        else
          echo container_tag=${CONTAINER_TAG} >> $GITHUB_OUTPUT
        fi

  build-push-kubespray:
    needs: output-variable
    uses: ./.github/workflows/call-image-build-kubespray.yaml
    secrets: inherit
    with:
      SPRAY_REF: ${{ inputs.SPRAY_REF }}
      ONLINE_REGISTER: ${{ needs.output-variable.outputs.online_register }}
      REPO: ${{ needs.output-variable.outputs.repo }}
      BUILD_PLATFORM: ${{ needs.output-variable.outputs.build_plateform }}

  build-push-sprayjob-and-kubean-operator:
    needs: [output-variable, build-push-kubespray]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.6.0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: airgap-patch image build
      uses: docker/build-push-action@v4.0.0
      with:
        context: ./
        file: ./build/images/airgap-patch/Dockerfile
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push: true
        provenance: false
        platforms: ${{ env.BUILD_PLATFORM }}
        tags: |
          ${{ env.ONLINE_REGISTER }}/${{ needs.output-variable.outputs.repo }}/airgap-patch:${{ needs.output-variable.outputs.container_tag }}
          ${{ env.ONLINE_REGISTER }}/${{ needs.output-variable.outputs.repo }}/airgap-patch:latest
        build-args: |
          SPRAY_TAG=${{ needs.output-variable.outputs.image_tag_short_sha }}
          REPO=${{ needs.output-variable.outputs.repo }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: spray-job image build
      uses: docker/build-push-action@v4.0.0
      with:
        context: ./
        file: ./build/images/spray-job/Dockerfile
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push: true
        provenance: false
        platforms: ${{ env.BUILD_PLATFORM }}
        tags: |
          ${{ env.ONLINE_REGISTER }}/${{ needs.output-variable.outputs.repo }}/spray-job:${{ needs.output-variable.outputs.container_tag }}
          ${{ env.ONLINE_REGISTER }}/${{ needs.output-variable.outputs.repo }}/spray-job:latest
        build-args: |
          SPRAY_TAG=${{ needs.output-variable.outputs.image_tag_short_sha }}
          REPO=${{ needs.output-variable.outputs.repo }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: kubean-operator image build
      uses: docker/build-push-action@v4.0.0
      with:
        context: ./
        file: ./build/images/kubean-operator/Dockerfile
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push: true
        provenance: false
        platforms: ${{ env.BUILD_PLATFORM }}
        tags: |
          ${{ env.ONLINE_REGISTER }}/${{ needs.output-variable.outputs.repo }}/kubean-operator:${{ needs.output-variable.outputs.container_tag }}
          ${{ env.ONLINE_REGISTER }}/${{ needs.output-variable.outputs.repo }}/kubean-operator:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security-scanning:
    runs-on: ubuntu-latest
    needs: [build-push-sprayjob-and-kubean-operator, output-variable]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: set environment variable
      run: |
        export REGISTRY=${{ env.ONLINE_REGISTER }}
        export REPO=${{ needs.output-variable.outputs.repo }}
        export IMAGE_TAG=${{ needs.output-variable.outputs.container_tag }}
        export SPRAY_IMAGE_TAG_SHORT_SHA=${{ needs.output-variable.outputs.image_tag_short_sha }}
        make security-scanning
